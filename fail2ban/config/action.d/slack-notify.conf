[Definition]

# Prevent notification/action for re-banned IPs when Fail2Ban restarts.
norestored = 1

# Option:  actionstart
# Notes.:  command executed once at the start of Fail2Ban.
# Values:  CMD
#
actionstart = curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"<name> jail has started\"}" <slack_webhook_url>

# Option:  actionstop
# Notes.:  command executed once at the end of Fail2Ban
# Values:  CMD
#
actionstop = curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"<name> jail has stopped\"}" <slack_webhook_url>

# Option:  actioncheck
# Notes.:  command executed once before each actionban command
# Values:  CMD
#
actioncheck =

# Option:  actionban
# Notes.:  command executed when banning an IP. Take care that the
#          command is executed with Fail2Ban user rights.
# Tags:    <ip>  IP address
#          <failures>  number of failures
#          <time>  unix timestamp of the ban time
# Values:  CMD
#
actionban = curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"<name> banned IP *<ip>*\"}" <slack_webhook_url>

# Option:  actionunban
# Notes.:  command executed when unbanning an IP. Take care that the
#          command is executed with Fail2Ban user rights.
# Tags:    <ip>  IP address
#          <failures>  number of failures
#          <time>  unix timestamp of the ban time
# Values:  CMD
#
actionunban = curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"<name> unbanned IP *<ip>*\"}" <slack_webhook_url>

[Init]

init = 'Sending notification to Slack'

slack_webhook_url = $F2B_SLACK_URL
